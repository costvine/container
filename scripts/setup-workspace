#!/bin/bash

if [[ -z $CI ]]; then
	echo "===> setup-workspace: Configuring Visual Studio Code for Python and Poetry"
	if [[ ! -f $MACHINE_SETTINGS ]]; then
		echo "===> setup-workspace: Waiting for $MACHINE_SETTINGS file to appear..."
		waited=0
		while [[ ! -f $MACHINE_SETTINGS && $waited -lt 60 ]]; do
			sleep 1
			waited=$((waited + 1))
		done
	fi

	if [[ ! -f $MACHINE_SETTINGS ]]; then
		echo "===> setup-workspace: File still not found after 60 seconds. Skipping configuration."
	else
		jq ". + { \"python.defaultInterpreterPath\": \"$WORKSPACE_PYTHON_DIR/bin/python\" }" $MACHINE_SETTINGS >/tmp/temp.json
		mv -f /tmp/temp.json $MACHINE_SETTINGS
		jq ". + { \"python.terminal.activateEnvironment\": false }" $MACHINE_SETTINGS >/tmp/temp.json
		mv -f /tmp/temp.json $MACHINE_SETTINGS
		jq ". + { \"python.venvPath\": \"$POETRY_CACHE_DIR/virtualenvs\" }" $MACHINE_SETTINGS >/tmp/temp.json
		mv -f /tmp/temp.json $MACHINE_SETTINGS
	fi
fi

if [[ ! -z $GOOGLE_CREDENTIALS ]]; then
	echo "===> setup-workspace: Authenticating to Google Cloud"
	mkdir -p $GOOGLE_CLOUD_CONFIG
	echo $GOOGLE_CREDENTIALS >$GOOGLE_APPLICATION_CREDENTIALS
	gcloud auth activate-service-account $GOOGLE_ACCOUNT --key-file=$GOOGLE_APPLICATION_CREDENTIALS --project=$GOOGLE_PROJECT
fi

echo "===> setup-workspace: Shadowing pyproject.toml files"
shadow-pyproject

echo "===> setup-workspace: Installing NPM dependencies (using pnpm)"
if [[ ! -z $CI ]]; then
	pnpm install --ignore-scripts
else
	pnpm install
fi

if [[ -z $CI ]]; then
	echo "===> setup-workspace: Syncing configuration from the tools package"
	update-dotfiles
	source scripts/bash-include
	normal-path
fi

echo "===> setup-workspace: Installing Python dependencies (using Poetry)"
install-pyproject

echo "===> setup-workspace: Installing patches"
patch

echo "===> setup-workspace: Setup complete"
